version: '3'

services:
  trust-registry:
    image: ${REGISTRY:-local}/ssi-trust-registry:${IMAGE_TAG:-latest}
    container_name: trust-registry
    ports:
      - 3000:3000
      - 3001:3001
    healthcheck:
      test: curl -f http://localhost:3000/health
      interval: 15s
      timeout: 5s
      start_period: 300s
    environment:
      URL: http://0.0.0.0
      PORT: 3000
      DB_CONNECTION_STRING: mongodb://mongo:mongo@mongo:27017
      DB_NAME: trust-registry
      SMTP_HOST: smtp4dev
      SMTP_PORT: 25
      SMTP_USER: user
      SMTP_PASSWORD: password
      AUTH_JWT_SECRET_KEY: authjwtsecretkey
      AUTH_ADMIN_PASSWORD_HASH: passwordhash
      FRONTEND_URL: http://localhost:3001
      SKIP_INITIAL_DATA_LOAD: true
      LOGGER_LOG_LEVEL: debug
      NEXT_PUBLIC_BACKEND_URL: http://localhost:3000
    networks:
      - ssi-trust-registry
    depends_on:
      mongo:
        condition: service_healthy
  mongo:
    image: mongo:7.0
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
      MONGO_INITDB_DATABASE: trust-registry
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 15s
      timeout: 5s
      start_period: 5s
    networks:
      - ssi-trust-registry
    volumes:
      - mongo:/data/db
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo
      ME_CONFIG_MONGODB_SERVER: mongo
    networks:
      - ssi-trust-registry
    depends_on:
      mongo:
        condition: service_healthy
  smtp4dev:
    image: rnwood/smtp4dev:v3
    container_name: smtp4dev
    ports:
      - 5000:80
      - 25:25
    networks:
      - ssi-trust-registry
    volumes:
      - smtp4dev-data:/smtp4dev

  trust-registry-health:
    image: curlimages/curl
    container_name: trust-registry-health
    restart: 'no'
    command: /bin/sh -c "until curl -fsS http://trust-registry:3000/health; do sleep 1; done"
    networks:
      - ssi-trust-registry
    depends_on:
      trust-registry:
        condition: service_healthy

volumes:
  mongo:
  smtp4dev-data:

networks:
  ssi-trust-registry:
