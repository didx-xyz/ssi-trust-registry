nameOverride: ""
fullnameOverride: trust-registry

replicaCount: 1

image:
  repository: ghcr.io/didx-xyz/ssi-trust-registry
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
securityContext:
  runAsUser: 1000
  runAsNonRoot: true
  readOnlyRootFilesystem: true
  # capabilities:
  #   drop:
  #   - ALL

config:
  url: http://0.0.0.0
  port: 3000
  # dbConnectionString: mongodb://{{ .Values.db.user }}:{{ .Values.db.password }}@{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.opts }}
  dbName: trust-registry

db:
  user: mongo
  password: mongo
  host: mongo
  port: 27017
  opts: ""

extraEnvVars: {}
  # foo: bar # -> FOO
  # fooBaz: baz # -> FOO_BAZ
  # dbConnectionString: # -> DB_CONNECTION_STRING
  #   - valueFrom:
  #       secretKeyRef:
  #         name: mongo-connect
  #         key: dbConnectionString

initContainers:
  - name: nc-mongo
    image: busybox
    imagePullPolicy: Always
    command:
      - sh
      - -c
      - |-
        until nc -w 3 -z {{ .Values.db.host }} {{ .Values.db.port }}; do
          echo "Waiting for mongo to start..."
          sleep 3
        done
  # - name: download-certs
  #   image: busybox
  #   imagePullPolicy: Always
  #   command:
  #     - sh
  #     - -c
  #     - |-
  #       wget -O /certs/global-bundle.pem \
  #         https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
  #   volumeMounts:
  #     - name: certs
  #       mountPath: /certs
extraVolumes:
  - name: afj
    emptyDir: {}
  # - name: certs
  #   emptyDir: {}
extraVolumeMounts:
  - name: afj
    mountPath: /home/node/.afj
  # - name: certs
  #   mountPath: /certs
  #   readOnly: true

service:
  type: ClusterIP
  port: 3000

ingress:
  internal:
    enabled: false
    className: nginx-internal
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: trust-registry.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local
  external:
    enabled: false
    className: nginx-external
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: trust-registry.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
tolerations: []
affinity: {}

mongodb:
  # https://github.com/bitnami/charts/tree/main/bitnami/mongodb
  enabled: false
