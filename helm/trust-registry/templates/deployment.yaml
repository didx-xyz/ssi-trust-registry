apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trust-registry.fullname" . }}
  labels:
    {{- include "trust-registry.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "trust-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
        {{- end }}
      labels:
        {{- include "trust-registry.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.initContainers }}
      initContainers:
        {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "trust-registry.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: trust-registry
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          envFrom:
            - secretRef:
                name: {{ include "trust-registry.fullname" . }}
          {{- with .Values.extraEnvVars }}
          env:
            {{- range $k,$v := . }}
            - name: {{ upper (snakecase $k) }}
              {{- if typeIs "string" $v }}
              value: {{ tpl $v $ }}
              {{- else }}
              {{- tpl (toYaml $v) $ | nindent 14 }}
              {{- end }}
            {{- end }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts:
            {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.extraVolumes }}
      volumes:
        {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 8 }}
      {{- end }}
